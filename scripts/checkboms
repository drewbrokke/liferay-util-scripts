#!/bin/bash

# Make sure we're in a workspace
if [ ! -f settings.gradle ]; then
	echo "Must be run from the root of a Liferay workspace"
	exit 1
fi

if ! grep --silent 'classpath group: "com.liferay", name: "com.liferay.gradle.plugins.workspace", version:' settings.gradle &>/dev/null; then
	echo "Must be run from the root of a Liferay workspace"
	exit 1
fi

# Make sure jq is installed
if ! command -v jq &>/dev/null; then
	echo "jq not found. Check here for install instructions: https://jqlang.github.io/jq/download/"
	exit 1
fi

# Make sure there's a file to write to
output_file="${1?Please pass in a name for the output file}"

# Make sure it's not a directory
if [ -d "${output_file}" ]; then
	echo "${output_file} is a directory"
	exit 1
fi

# Make sure it doesn't have content
if [ -s "${output_file}" ]; then
	echo "${output_file} already has content"
	exit 1
fi

# Helper functions
function _writeCSV() {
	releaseKey="$1"
	status="$2"
	reason="$3"

	_pad=25

	printf "%-${_pad}s%-${_pad}s%s\n" "${releaseKey}" "${status}" "${reason}"
	printf "%s,%s,%s\n" "${releaseKey}" "${status}" "${reason}" >>"${output_file}"
}

function _fail() {
	releaseKey="$1"
	reason="$2"

	_writeCSV "${releaseKey}" "FAILED" "${reason}"
}

function _pass() {
	releaseKey="$1"

	_writeCSV "${releaseKey}" "PASSED" ""
}

releases_url="https://releases.liferay.com/releases.json"

echo "Waiting on ${releases_url}..."

# Read releases.json into an array
items=()
while IFS='' read -r line; do
	items+=("$line")
done < <(curl -s "${releases_url}" | jq '.[]' --compact-output)

# Write CSV header row
_writeCSV "Release Key" "Status" "Reason"

count="${#items[@]}"

# Iterate releases
for obj in "${items[@]}"; do
	echo ""
	echo "Remaining items: ${count}"
	count=$((count - 1))

	releaseKey="$(echo "${obj}" | jq -r '.releaseKey')"
	url="$(echo "${obj}" | jq -r '.url')"

	release_properties_url="$url/release.properties"

	release_properties="$(curl -s -m 5 "${release_properties_url}")"
	if [ -z "${release_properties}" ]; then
		_fail "${releaseKey}" "Could not get release properties after 5 seconds"
		continue
	fi

	if echo "${release_properties}" | grep "404 Not Found" &>/dev/null; then
		_fail "${releaseKey}" "No release.properties file exists"
		continue
	fi

	target_platform_version="$(
		echo "${release_properties}" |
			grep target.platform.version |
			sed 's/.*=//g'
	)"
	if [ -z "${target_platform_version}" ]; then
		_fail "${releaseKey}" "No target platform version defined in release.properties"
		continue
	fi

	inlineTargetPlatformVersion="$(echo "${obj}" | jq -r '.targetPlatformVersion')"
	if [ "${inlineTargetPlatformVersion}" != "${target_platform_version}" ]; then
		_fail "${releaseKey}" "Inline and properties target platform versions do not match: ${inlineTargetPlatformVersion} <> ${target_platform_version}"
		continue
	fi

	if ./gradlew dependencyManagement -Pliferay.workspace.target.platform.version="${target_platform_version}" &>/dev/null; then
		_pass "${releaseKey}"
	else
		_fail "${releaseKey}" "No BOM available"
	fi
done

echo "done"
